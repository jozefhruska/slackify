### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Collection {
  components(after: ComponentWhereUniqueInput, before: ComponentWhereUniqueInput, first: Int, last: Int, skip: Int): [Component!]!
  componentsCount: Int!
  description: String
  id: String!
  name: String!
  team: Team!
  type: ComponentType!
}

type Component {
  author: User!
  id: String!
  published: Boolean!
  type: ComponentType!
}

enum ComponentType {
  ARTICLE
  LINK
  PLAIN_TEXT
}

input ComponentWhereUniqueInput {
  id: String
}

type Mutation {
  deleteCollection(collectionId: String!): Collection!
  signIn(code: String!): SignInOutput
}

input PaginationInput {
  limit: Int
  skip: Int
}

type Query {
  getCollectionsListing(input: PaginationInput): [Collection!]!
  getUser: User
}

type SignInOutput {
  authToken: String!
  user: User!
}

type Team {
  accessToken: String!
  domain: String!
  id: String!
  name: String!
}

type User {
  accessToken: String!
  email: String!
  id: String!
  image_192: String
  image_24: String
  image_32: String
  image_48: String
  image_512: String
  image_72: String
  name: String!
  team: Team!
}
