### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


input CategoryCreateOneWithoutPostsInput {
  connect: CategoryWhereUniqueInput
  create: CategoryCreateWithoutPostsInput
}

input CategoryCreateWithoutPostsInput {
  handle: String!
  id: String
}

input CategoryWhereUniqueInput {
  id: String
}

scalar DateTime

type Mutation {
  authorizeWithSlack(code: String): User
  createDraft(authorEmail: String, content: String, title: String!): Post!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  publish(id: ID): Post
  signupUser(data: UserCreateInput!): User!
}

type Post {
  author: User!
  content: String
  createdAt: DateTime!
  id: String!
  title: String!
  updatedAt: DateTime!
}

input PostCreateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  create: [PostCreateWithoutAuthorInput!]
}

input PostCreateWithoutAuthorInput {
  category: CategoryCreateOneWithoutPostsInput!
  content: String
  createdAt: DateTime
  id: String
  isPublished: Boolean!
  short: String!
  title: String!
  type: String!
  updatedAt: DateTime
}

input PostWhereUniqueInput {
  id: String
}

type Query {
  feed: [Post!]!
  filterPosts(searchString: String): [Post!]!
  post(where: PostWhereUniqueInput!): Post
  posts(after: String, before: String, first: Int, last: Int, skip: Int): [Post!]!
  users(after: String, before: String, first: Int, last: Int, skip: Int): [User!]!
}

type User {
  accessToken: String!
  email: String!
  id: String!
  name: String!
  posts: [Post!]!
}

input UserCreateInput {
  accessToken: String!
  email: String!
  id: String!
  name: String!
  posts: PostCreateManyWithoutAuthorInput
}
