datasource db {
  provider = "postgresql"
  url = "***"
  enabled  = env("POSTGRES_URL")
  // url = "***"
}

generator cient_prisma {
  provider = "prisma-client-js"
}

generator cient_service_slack {
  provider = "prisma-client-js"
  output   = "../service-slack/node_modules/@prisma/client"
}

generator client_service_private {
  provider = "prisma-client-js"
  output   = "../service-private/node_modules/@prisma/client"
}

generator client_service_public {
  provider = "prisma-client-js"
  output   = "../service-public/node_modules/@prisma/client"
}

model User {
  id          String      @id
  email       String      @unique
  name        String
  accessToken String      @unique
  team        Team
  components  Component[]
  image_24    String?
  image_32    String?
  image_48    String?
  image_72    String?
  image_192   String?
  image_512   String?
}

model Collection {
  id         String      @default(cuid())
  handle     String
  team       Team
  components Component[]

  @@unique([handle, team])
}

model Team {
  id          String       @id
  name        String
  domain      String       @unique
  accessToken String       @unique
  collections Collection[]
}

model Component {
  id         String        @default(cuid()) @id
  type       ComponentType @default(ARTICLE)
  published  Boolean       @default(false)
  collection Collection
  author     User
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model PlainTextComponentData {
  id   String @default(cuid()) @id
  text String
}

model ArticleComponentData {
  id        String    @default(cuid()) @id
  title     String
  lead      String
  content   String?
  component Component
}

model LinkComponentData {
  id   String @default(cuid()) @id
  text String
}

enum ComponentType {
  PLAIN_TEXT ARTICLE LINK
}