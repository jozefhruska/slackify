datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  enabled  = env("POSTGRES_URL")
}

generator cient_common {
  provider = "prisma-client-js"
  output   = "../../node_modules/@prisma/client"
}

model User {
  id          String      @id
  email       String      @unique
  name        String
  accessToken String      @unique
  image_24    String?
  image_32    String?
  image_48    String?
  image_72    String?
  image_192   String?
  image_512   String?
  team        Team        @relation(fields: [teamId], references: [id])
  teamId      String
  components  Component[]
}

model Collection {
  id          String        @default(cuid()) @id
  name        String
  type        ComponentType
  published   Boolean       @default(false)
  description String?
  team        Team          @relation(fields: [teamId], references: [id])
  teamId      String
  components  Component[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Team {
  id          String       @id
  name        String
  domain      String       @unique
  accessToken String       @unique
  collections Collection[]
  users       User[]
  components  Component[]
}

model Component {
  id            String                  @default(cuid()) @id
  type          ComponentType           @default(PLAIN_TEXT)
  published     Boolean                 @default(false)
  collection    Collection              @relation(fields: [collectionId], references: [id])
  collectionId  String
  author        User                    @relation(fields: [authorId], references: [id])
  authorId      String
  team          Team                    @relation(fields: [teamId], references: [id])
  teamId        String
  plainTextData PlainTextComponentData?
  articleData   ArticleComponentData?
  linkData      LinkComponentData?
  createdAt     DateTime                @default(now())
  updatedAt     DateTime                @updatedAt
}

model PlainTextComponentData {
  id          String    @default(cuid()) @id
  text        String
  component   Component @relation(fields: [componentId], references: [id])
  componentId String
}

model ArticleComponentData {
  id          String    @default(cuid()) @id
  title       String
  lead        String?
  content     String
  component   Component @relation(fields: [componentId], references: [id])
  componentId String
}

model LinkComponentData {
  id          String    @default(cuid()) @id
  text        String?
  url         String
  component   Component @relation(fields: [componentId], references: [id])
  componentId String
}

enum ComponentType {
  PLAIN_TEXT
  ARTICLE
  LINK
}