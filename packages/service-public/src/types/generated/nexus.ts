/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../../index"
import * as prisma from "@prisma/client"
import { FieldAuthorizeResolver } from "@nexus/schema/dist/plugins/fieldAuthorizePlugin"


declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CollectionWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  ComponentWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  DateTimeFilter: { // input type
    equals?: any | null; // DateTime
    gt?: any | null; // DateTime
    gte?: any | null; // DateTime
    in?: any[] | null; // [DateTime!]
    lt?: any | null; // DateTime
    lte?: any | null; // DateTime
    not?: any | null; // DateTime
    notIn?: any[] | null; // [DateTime!]
  }
  NullableStringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  QueryCollectionsOrderByInput: { // input type
    createdAt?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    description?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    name?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    type?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    updatedAt?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
  }
  QueryCollectionsWhereInput: { // input type
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    description?: NexusGenInputs['NullableStringFilter'] | null; // NullableStringFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    type?: NexusGenEnums['ComponentType'] | null; // ComponentType
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  QueryComponentsOrderByInput: { // input type
    createdAt?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    id?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    type?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
    updatedAt?: NexusGenEnums['OrderByArg'] | null; // OrderByArg
  }
  QueryComponentsWhereInput: { // input type
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    id?: NexusGenInputs['StringFilter'] | null; // StringFilter
    type?: NexusGenEnums['ComponentType'] | null; // ComponentType
    updatedAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
}

export interface NexusGenEnums {
  ComponentType: prisma.ComponentType
  OrderByArg: prisma.OrderByArg
}

export interface NexusGenRootTypes {
  ArticleComponentData: prisma.ArticleComponentData;
  Collection: prisma.Collection;
  Component: prisma.Component;
  LinkComponentData: prisma.LinkComponentData;
  PlainTextComponentData: prisma.PlainTextComponentData;
  Query: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
  ComponentData: NexusGenRootTypes['ArticleComponentData'] | NexusGenRootTypes['LinkComponentData'] | NexusGenRootTypes['PlainTextComponentData'];
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  CollectionWhereUniqueInput: NexusGenInputs['CollectionWhereUniqueInput'];
  ComponentWhereUniqueInput: NexusGenInputs['ComponentWhereUniqueInput'];
  DateTimeFilter: NexusGenInputs['DateTimeFilter'];
  NullableStringFilter: NexusGenInputs['NullableStringFilter'];
  QueryCollectionsOrderByInput: NexusGenInputs['QueryCollectionsOrderByInput'];
  QueryCollectionsWhereInput: NexusGenInputs['QueryCollectionsWhereInput'];
  QueryComponentsOrderByInput: NexusGenInputs['QueryComponentsOrderByInput'];
  QueryComponentsWhereInput: NexusGenInputs['QueryComponentsWhereInput'];
  StringFilter: NexusGenInputs['StringFilter'];
  ComponentType: NexusGenEnums['ComponentType'];
  OrderByArg: NexusGenEnums['OrderByArg'];
}

export interface NexusGenFieldTypes {
  ArticleComponentData: { // field return type
    content: string; // String!
    lead: string | null; // String
    title: string; // String!
  }
  Collection: { // field return type
    components: NexusGenRootTypes['Component'][]; // [Component!]!
    componentsCount: number; // Int!
    createdAt: any; // DateTime!
    description: string | null; // String
    id: string; // String!
    name: string; // String!
    published: boolean; // Boolean!
    type: NexusGenEnums['ComponentType']; // ComponentType!
    updatedAt: any; // DateTime!
  }
  Component: { // field return type
    collection: NexusGenRootTypes['Collection']; // Collection!
    createdAt: any; // DateTime!
    data: NexusGenRootTypes['ComponentData'] | null; // ComponentData
    id: string; // String!
    published: boolean; // Boolean!
    type: NexusGenEnums['ComponentType']; // ComponentType!
    updatedAt: any; // DateTime!
  }
  LinkComponentData: { // field return type
    text: string | null; // String
    url: string; // String!
  }
  PlainTextComponentData: { // field return type
    text: string; // String!
  }
  Query: { // field return type
    collection: NexusGenRootTypes['Collection'] | null; // Collection
    collections: NexusGenRootTypes['Collection'][]; // [Collection!]!
    component: NexusGenRootTypes['Component'] | null; // Component
    components: NexusGenRootTypes['Component'][]; // [Component!]!
  }
}

export interface NexusGenArgTypes {
  Collection: {
    components: { // args
      after?: NexusGenInputs['ComponentWhereUniqueInput'] | null; // ComponentWhereUniqueInput
      before?: NexusGenInputs['ComponentWhereUniqueInput'] | null; // ComponentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Query: {
    collection: { // args
      where: NexusGenInputs['CollectionWhereUniqueInput']; // CollectionWhereUniqueInput!
    }
    collections: { // args
      after?: NexusGenInputs['CollectionWhereUniqueInput'] | null; // CollectionWhereUniqueInput
      before?: NexusGenInputs['CollectionWhereUniqueInput'] | null; // CollectionWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenInputs['QueryCollectionsOrderByInput'] | null; // QueryCollectionsOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['QueryCollectionsWhereInput'] | null; // QueryCollectionsWhereInput
    }
    component: { // args
      where: NexusGenInputs['ComponentWhereUniqueInput']; // ComponentWhereUniqueInput!
    }
    components: { // args
      after?: NexusGenInputs['ComponentWhereUniqueInput'] | null; // ComponentWhereUniqueInput
      before?: NexusGenInputs['ComponentWhereUniqueInput'] | null; // ComponentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenInputs['QueryComponentsOrderByInput'] | null; // QueryComponentsOrderByInput
      skip?: number | null; // Int
      where?: NexusGenInputs['QueryComponentsWhereInput'] | null; // QueryComponentsWhereInput
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
  ComponentData: "ArticleComponentData" | "LinkComponentData" | "PlainTextComponentData"
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "ArticleComponentData" | "Collection" | "Component" | "LinkComponentData" | "PlainTextComponentData" | "Query";

export type NexusGenInputNames = "CollectionWhereUniqueInput" | "ComponentWhereUniqueInput" | "DateTimeFilter" | "NullableStringFilter" | "QueryCollectionsOrderByInput" | "QueryCollectionsWhereInput" | "QueryComponentsOrderByInput" | "QueryComponentsWhereInput" | "StringFilter";

export type NexusGenEnumNames = "ComponentType" | "OrderByArg";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = "ComponentData";

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
  }
  interface NexusGenPluginSchemaConfig {
  }
}