/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../index"
import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ComponentWhereUniqueInput: { // input type
    id?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Collection: prisma.Collection;
  Component: prisma.Component;
  Query: {};
  Team: prisma.Team;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ComponentWhereUniqueInput: NexusGenInputs['ComponentWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Collection: { // field return type
    components: NexusGenRootTypes['Component'][]; // [Component!]!
    handle: string; // String!
    id: string; // String!
    team: NexusGenRootTypes['Team']; // Team!
  }
  Component: { // field return type
    collection: NexusGenRootTypes['Collection']; // Collection!
    content: string | null; // String
    createdAt: any; // DateTime!
    id: string; // String!
    isPublished: boolean; // Boolean!
    short: string; // String!
    title: string; // String!
    type: string; // String!
    updatedAt: any; // DateTime!
  }
  Query: { // field return type
    getCollection: NexusGenRootTypes['Collection'] | null; // Collection
    getCollections: NexusGenRootTypes['Collection'][]; // [Collection!]!
    getComponent: NexusGenRootTypes['Component'] | null; // Component
    getComponents: NexusGenRootTypes['Component'][]; // [Component!]!
  }
  Team: { // field return type
    domain: string; // String!
    id: string; // String!
    name: string; // String!
  }
}

export interface NexusGenArgTypes {
  Collection: {
    components: { // args
      after?: NexusGenInputs['ComponentWhereUniqueInput'] | null; // ComponentWhereUniqueInput
      before?: NexusGenInputs['ComponentWhereUniqueInput'] | null; // ComponentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Query: {
    getCollection: { // args
      collectionId?: string | null; // String
    }
    getComponent: { // args
      componentId?: string | null; // String
    }
    getComponents: { // args
      collectionId?: string | null; // String
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Collection" | "Component" | "Query" | "Team";

export type NexusGenInputNames = "ComponentWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}